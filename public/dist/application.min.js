"use strict";var ApplicationConfiguration=function(){var applicationModuleName="MichaelBritsch",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ngTouch","slick","textAngular"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("appointments");
"use strict";ApplicationConfiguration.registerModule("biographies");
"use strict";ApplicationConfiguration.registerModule("contacts");
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("impressums");
"use strict";ApplicationConfiguration.registerModule("pictures");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";angular.module("appointments").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Referenzen",state:"appointments.list",position:3})}]);
"use strict";angular.module("appointments").config(["$stateProvider",function($stateProvider){$stateProvider.state("appointments",{"abstract":!0,url:"/appointments",template:"<ui-view/>"}).state("appointments.list",{url:"",templateUrl:"modules/appointments/views/list-appointments.client.view.html"}).state("appointments.create",{url:"/create",templateUrl:"modules/appointments/views/create-appointment.client.view.html"}).state("appointments.view",{url:"/:appointmentId",templateUrl:"modules/appointments/views/view-appointment.client.view.html"}).state("appointments.edit",{url:"/:appointmentId/edit",templateUrl:"modules/appointments/views/edit-appointment.client.view.html"})}]);
"use strict";angular.module("appointments").factory("Appointments",["$resource",function($resource){return $resource("api/appointments/:appointmentId",{appointmentId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("appointments").controller("AppointmentsController",["$scope","$stateParams","$location","Authentication","Appointments",function($scope,$stateParams,$location,Authentication,Appointments){$scope.authentication=Authentication,$scope.create=function(){var appointment=new Appointments({name:this.name,description:this.description,location:this.location,date:this.date});console.log(appointment),console.log(this),appointment.$save(function(response){$location.path("appointments/"+response._id),$scope.name="",$scope.description="",$scope.location="",$scope.date=new Date},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(appointment){if(appointment){appointment.$remove();for(var i in $scope.appointments)$scope.appointments[i]===appointment&&$scope.appointments.splice(i,1)}else $scope.appointment.$remove(function(){$location.path("appointments")})},$scope.update=function(){var appointment=$scope.appointment;appointment.$update(function(){$location.path("appointments/"+appointment._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.appointments=Appointments.query()},$scope.findOne=function(){$scope.appointment=Appointments.get({appointmentId:$stateParams.appointmentId})},$scope.isInFuture=function(appointment){var mongoDate=new Date(appointment.date),todaysDate=new Date((new Date).setDate((new Date).getDate()-1));return todaysDate.setHours(0,0,0),mongoDate>todaysDate?!0:!1},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0]}]);
"use strict";angular.module("biographies").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Biografie",state:"biographies.view",position:0})}]);
"use strict";angular.module("biographies").config(["$stateProvider",function($stateProvider){$stateProvider.state("biographies",{"abstract":!0,url:"/biographies",template:"<ui-view/>"}).state("biographies.list",{url:"",templateUrl:"modules/biographies/views/list-biographies.client.view.html"}).state("biographies.create",{url:"/create",templateUrl:"modules/biographies/views/create-biography.client.view.html"}).state("biographies.view",{url:"/view",templateUrl:"modules/biographies/views/view-biography.client.view.html"}).state("biographies.edit",{url:"/:biographyId/edit",templateUrl:"modules/biographies/views/edit-biography.client.view.html"})}]);
"use strict";angular.module("biographies").controller("BiographiesController",["$scope","$stateParams","$location","Authentication","Biographies",function($scope,$stateParams,$location,Authentication,Biographies){$scope.authentication=Authentication,$scope.create=function(){var biography=new Biographies({name:this.name,htmlContent:this.htmlContent});biography.$save(function(response){$location.path("biographies/"+response._id),$scope.name="",$scope.htmlContent=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(biography){if(biography){biography.$remove();for(var i in $scope.biographies)$scope.biographies[i]===biography&&$scope.biographies.splice(i,1)}else $scope.biography.$remove(function(){$location.path("biographies")})},$scope.update=function(){var biography=$scope.biography;biography.changed=new Date,biography.$update(function(){$location.path("biographies/"+biography._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.biographies=Biographies.query(function(biographyResults){$scope.biography=biographyResults[0]})},$scope.findOne=function(){$scope.biography=Biographies.get({biographyId:$stateParams.biographyId})}}]);
"use strict";angular.module("biographies").factory("Biographies",["$resource",function($resource){return $resource("api/biographies/:biographyId",{biographyId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("contacts").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Kontakt",isPublic:!0,state:"contact",position:4})}]);
"use strict";angular.module("contacts").config(["$stateProvider",function($stateProvider){$stateProvider.state("contacts",{"abstract":!0,url:"/contact",template:"<ui-view/>"}).state("contact",{url:"",templateUrl:"modules/contacts/views/view-contact.client.view.html"})}]);
"use strict";angular.module("contacts").factory("Contacts",["$resource",function($resource){return $resource("api/contacts/:contactId",{contactId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("contacts").controller("ContactsController",["$scope","$stateParams","$http","$location","Authentication","Contacts",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.userName="",$scope.subject="",$scope.mailBody="",$scope.mailSuccess=$scope.mailError=null,$scope.disableForm=!1,$scope.initialiseContactForm=function(){$scope.userName="",$scope.subject="",$scope.mailBody="",$scope.mailSuccess=$scope.mailError=null,$scope.disableForm=!1},$scope.askForContactMail=function(){$scope.success=$scope.error=null;var mailBodyUser=$scope.mailBody.replace(new RegExp("\r?\n","g"),"<br />")+"<br /><br />Mail from: "+$scope.authentication.user.displayName+"<br />Formname: "+$scope.userName+"<br />Username: "+$scope.authentication.user.username+"<br />Email: "+$scope.authentication.user.email+" ",eMailMessage={subject:$scope.subject,mailBody:mailBodyUser};$http.post("/api/contact",eMailMessage).success(function(response){response.error?($scope.mailError=response.message,$scope.disableForm=!0):($scope.mailSuccess=response.message,$scope.disableForm=!0)}).error(function(response){$scope.mailError=response.message,$scope.disableForm=!0})}}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.userIsAdmin=!1,$scope.checkUserRoles=function(){var i;if(""!==$scope.authentication.user){for(i=0;i<$scope.authentication.user.roles.length;i++)if("admin"===$scope.authentication.user.roles[i])return void($scope.userIsAdmin=!0)}else $scope.userIsAdmin=!1}}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!0})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";angular.module("impressums").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Impressum",isPublic:!0,state:"impressum",position:5})}]);
"use strict";angular.module("impressums").config(["$stateProvider",function($stateProvider){$stateProvider.state("impressums",{"abstract":!0,url:"/impressum",template:"<ui-view/>"}).state("impressum",{url:"",templateUrl:"modules/impressums/views/view-impressum.client.view.html"})}]);
"use strict";angular.module("pictures").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Bilder",isPublic:!0,state:"pictures.slick",position:1})}]);
"use strict";angular.module("pictures").config(["$stateProvider",function($stateProvider){$stateProvider.state("pictures",{"abstract":!0,url:"/pictures",template:"<ui-view/>"}).state("pictures.slick",{url:"",templateUrl:"modules/pictures/views/slick-pictures.client.view.html"}).state("pictures.create",{url:"/create",templateUrl:"modules/pictures/views/create-picture.client.view.html"}).state("pictures.list",{url:"/list",templateUrl:"modules/pictures/views/list-pictures.client.view.html"}).state("pictures.view",{url:"/:pictureId",templateUrl:"modules/pictures/views/view-picture.client.view.html"}).state("pictures.edit",{url:"/:pictureId/edit",templateUrl:"modules/pictures/views/edit-picture.client.view.html"})}]);
"use strict";angular.module("pictures").controller("PicturesController",["$scope","$stateParams","$location","Authentication","Pictures","$http",function($scope,$stateParams,$location,Authentication,Pictures,$http){$scope.authentication=Authentication,$scope.picture=null,$scope.flickrPictureId=0,$scope.flickrLink="",$scope.flickrSuccess=!0,$scope.getSourceBySize=function(sizeLabel,picture){for(var key in picture.sizes)if(picture.sizes[key].label===sizeLabel)return picture.sizes[key].source},$scope.fetchFlickrData=function(){$scope.picture=new Pictures({name:this.name,description:this.description,sizes:[]}),$scope.flickrSuccess=!0,$scope.error="",$scope.flickrSquareIsAvailable=!1,$scope.flickrSmallIsAvailable=!1,$scope.flickrMediumIsAvailable=!1,$scope.flickrLargeIsAvailable=!1,$scope.flickrOriginalIsAvailable=!1,checkFlickrBBcode();var host="https://api.flickr.com",path="/services/rest/",method="flickr.photos.getSizes",apiKey="e52b35ac4e8f7389ec81840ff2497704",id=$scope.flickrPictureId,format="json&nojsoncallback=1",fullUrl=host.concat(path,"?method=",method,"&api_key=",apiKey,"&photo_id=",id,"&format=",format);$http.get(fullUrl).success(function(data,status){if("ok"===data.stat){var index=0;for(index=0;index<data.sizes.size.length;index++)switch($scope.picture.sizes.push({label:data.sizes.size[index].label,source:data.sizes.size[index].source,width:data.sizes.size[index].width,height:data.sizes.size[index].height}),data.sizes.size[index].label){case"Square":$scope.flickrSquareSource=data.sizes.size[index].source,""!==$scope.flickrSquareSource&&($scope.flickrSquareIsAvailable=!0);break;case"Small":$scope.flickrSmallSource=data.sizes.size[index].source,""!==$scope.flickrSmallSource&&($scope.flickrSmallIsAvailable=!0);break;case"Medium 640":$scope.flickrMediumSource=data.sizes.size[index].source,""!==$scope.flickrMediumSource&&($scope.flickrMediumIsAvailable=!0);break;case"Large":$scope.flickrLargeSource=data.sizes.size[index].source,""!==$scope.flickrLargeSource&&($scope.flickrLargeIsAvailable=!0);break;case"Original":$scope.flickrOriginalSource=data.sizes.size[index].source,""!==$scope.flickrOriginalSource&&($scope.flickrOriginalIsAvailable=!0)}$scope.flickrSuccess=!1}else $scope.error=data.message||"Request failed";data=null,status=null}).error(function(data){$scope.error=data||"Request failed"})};var checkFlickrBBcode=function(){for(var flickrUrlId=$scope.flickrLink.replace("https://flic.kr/p/",""),alphabet="123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",num=flickrUrlId.length,decoded=0,multi=1,i=num-1;i>=0;i--)decoded+=multi*alphabet.indexOf(flickrUrlId[i]),multi*=alphabet.length;$scope.flickrPictureId=decoded};$scope.create=function(){var picture=$scope.picture;picture.$save(function(response){$location.path("pictures/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(picture){if(picture){picture.$remove();for(var i in $scope.pictures)$scope.pictures[i]===picture&&$scope.pictures.splice(i,1)}else $scope.picture.$remove(function(){$location.path("pictures")})},$scope.update=function(){var picture=$scope.picture;picture.$update(function(){$location.path("pictures/"+picture._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pictures=Pictures.query(initializeSlides)};var initializeSlides=function(){var i,j,slides=$scope.slides=[];for(i=0;i<$scope.pictures.length;i++){var slideAttributes=[];for(slideAttributes.name=$scope.pictures[i].name,j=0;j<$scope.pictures[i].sizes.length;j++){{$scope.pictures[i].description}"Large"===$scope.pictures[i].sizes[j].label?slideAttributes.largeImg=$scope.pictures[i].sizes[j].source:"Medium 640"===$scope.pictures[i].sizes[j].label?slideAttributes.mediumImg=$scope.pictures[i].sizes[j].source:"Square"===$scope.pictures[i].sizes[j].label&&(slideAttributes.squareImg=$scope.pictures[i].sizes[j].source)}slides.push(slideAttributes)}};$scope.findOne=function(){$scope.picture=Pictures.get({pictureId:$stateParams.pictureId})}}]);
"use strict";angular.module("pictures").filter("array",function(){return function(arrayLength){arrayLength=Math.ceil(arrayLength);for(var arr=new Array(arrayLength),i=0;arrayLength>i;i++)arr[i]=i;return arr}});
"use strict";angular.module("pictures").factory("Pictures",["$resource",function($resource){return $resource("api/pictures/:pictureId",{pictureId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("settings.admin",{url:"/admin",templateUrl:"modules/users/views/settings/edit-user-roles.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){console.log($scope.credentials),$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]);